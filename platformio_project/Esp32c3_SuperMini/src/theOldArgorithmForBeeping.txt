  sensor.configSensor(Adafruit_VL53L0X::VL53L0X_SENSE_LONG_RANGE);
  sensor.startRangeContinuous();

  int measurements[MEASUREMENTS_LEN] = {0};
  int measurements_delta[MEASUREMENTS_LEN] = {0};
  short measurements_position_counter = 0;
  int avarge = 10;
  int tempRange;
  unsigned long start_time_ms;
  while (true)
  {
    start_time_ms = millis();

    while (millis() - pow(avarge*RANGE_MODIFIER, RANGE_EXPONENT) <= start_time_ms)
    {
      if (sensor.isRangeComplete())
      {
        tempRange = sensor.readRange();
        tempRange = min(tempRange, 2500);
        measurements[measurements_position_counter] = tempRange;
        measurements_position_counter ++ ;
        if (measurements_position_counter == MEASUREMENTS_LEN)
        {
          int sum = 0;
          for (int i = 0; i < MEASUREMENTS_LEN; i++)
          {
            sum += measurements[i];
          }
          avarge = (float)sum / (float)MEASUREMENTS_LEN;
          int max_delta = 0;
          for (int i = 0; i < MEASUREMENTS_LEN; i++)
          {
            measurements_delta[i] = abs(measurements[i] - avarge);
            max_delta = max(measurements_delta[i], max_delta);
          }
          for (int i = 0; i < MEASUREMENTS_LEN; i++)
          {
            if (measurements_delta[i] == max_delta)
            {
              measurements[i] = -1;
              break;
            }
          }
          sum = 0;
          for (int i = 0; i < MEASUREMENTS_LEN; i++)
          {
            int val = measurements[i]!=-1?measurements[i]:0;
            sum += val;
          }
          avarge = (float)sum / ((float)MEASUREMENTS_LEN - 1.0);
          measurements_position_counter = 0;
        }
        Serial.println(avarge); // ~~~~~~~~~~~~~~~~~~~~~~
      }

    }
    tone(PIN_BUZZER, 1000, 10);
    delay(50);
  }